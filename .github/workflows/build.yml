name: Build and Package

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [18]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build renderer
      run: npm run build:renderer
      
    - name: Build and package for Windows
      if: matrix.os == 'windows-latest'
      run: npm run build:win
      
    - name: Build and package for macOS
      if: matrix.os == 'macos-latest'
      run: npm run build:mac
      
    - name: Build and package for Linux
      if: matrix.os == 'ubuntu-latest'
      run: npm run build:linux
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: media-converter-${{ matrix.os }}
        path: dist/
        retention-days: 30
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: List artifacts
      run: |
        find artifacts -type f -name "*.dmg" -o -name "*.exe" -o -name "*.AppImage" | head -10
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/media-converter-macos-latest/dist/*.dmg
          artifacts/media-converter-windows-latest/dist/*.exe
          artifacts/media-converter-ubuntu-latest/dist/*.AppImage
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 